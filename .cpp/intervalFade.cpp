//==================================================================================================================
//
// IntervalFadeの描画[IntervalFade.cpp]
// Author : Seiya Takahashi
//
//==================================================================================================================
#define _CRT_SECURE_NO_WARNINGS							// 警告回避文

//==================================================================================================================
// インクルードファイル
//==================================================================================================================
#include "intervalFade.h"
#include "renderer.h"
#include "manager.h"
#include "scene2D.h"

//==================================================================================================================
// マクロ定義
//==================================================================================================================
#define DECREASE_ALPHA 0.05f		// 減少していくα値

//==================================================================================================================
// 静的メンバ変数宣言
//==================================================================================================================
LPDIRECT3DTEXTURE9 CIntervalFade::m_pTexture = NULL;					// テクスチャ情報
CIntervalFade::INTERVAL_FADE CIntervalFade::m_fade = FADE_NONE;			// フェードの状態
D3DXCOLOR CIntervalFade::m_colorFade = D3DXCOLOR(0.0, 0.0, 0.0, 1.0);	// 色情報

//==================================================================================================================
// コンストラクタ
//==================================================================================================================
CIntervalFade::CIntervalFade(PRIORITY type = CScene::PRIORITY_GAME_FADE) :CScene2D(type)
{

}

//==================================================================================================================
// デストラクタ
//==================================================================================================================
CIntervalFade::~CIntervalFade()
{

}

//==================================================================================================================
// 初期化処理
//==================================================================================================================
void CIntervalFade::Init(void)
{
	// 初期化
	m_pos = D3DXVECTOR3(SCREEN_WIDTH / 2, SCREEN_HEIGHT / 2, 0);			// 位置
	m_fade = FADE_IN;														// フェードの状態
	m_colorFade = D3DXCOLOR(0.0f, 0.0f, 0.0f, 1.0f);						// 黒い画面（不透明）

	// Scene2Dの初期化処理
	CScene2D::Init();
}

//==================================================================================================================
// 終了処理
//==================================================================================================================
void CIntervalFade::Uninit(void)
{
	// Scene2Dの終了処理
	CScene2D::Uninit();
}

//==================================================================================================================
// 更新処理
//==================================================================================================================
void CIntervalFade::Update(void)
{
	// フェードがあるとき
	if (m_fade != FADE_NONE)
	{
		// フェード状態がインのとき
		if (m_fade == FADE_IN)
		{
			// フェードイン処理
			m_colorFade.a -= DECREASE_ALPHA;			// 透明度減らしていく

			// 透明度が0以下だったとき
			if (m_colorFade.a <= 0.0f)
			{
				// フェード処理終了
				m_colorFade.a = 0.0f;					// 透明度を0にする
				m_fade = FADE_NONE;						// フェード状態を何もない状態にする
			}
		}
		else if (m_fade == FADE_OUT)
		{// フェード状態がアウトのとき
			//フェードアウト処理
			m_colorFade.a += DECREASE_ALPHA;			// 画面を不透明にしていく

			// 透明度が1より大きくなったとき
			if (m_colorFade.a >= 1.0f)
			{
				//フェードイン処理に切り替え
				m_colorFade.a = 1.0f;					// 透明度を1にする
			}
		}
	}

	// 色設定
	SetCol(m_colorFade);

	// Scene2Dの更新処理
	CScene2D::Update();
}

//==================================================================================================================
// 描画処理
//==================================================================================================================
void CIntervalFade::Draw(void)
{
	// Scene2Dの描画処理
	CScene2D::Draw();
}

//==================================================================================================================
// フェードの取得
//==================================================================================================================
CIntervalFade::INTERVAL_FADE CIntervalFade::GetIntervalFade(void)
{
	return m_fade;
}

//==================================================================================================================
// オブジェクトの生成
//==================================================================================================================
CIntervalFade * CIntervalFade::Create(void)
{
	// フェード変数NULLにする
	CIntervalFade *pIntervalFade = NULL;

	// 動的に確保
	pIntervalFade = new CIntervalFade(CScene::PRIORITY_GAME_FADE);

	// 初期化処理
	pIntervalFade->Init();

	// 値を返す
	return pIntervalFade;
}

//==================================================================================================================
// テクスチャ情報ロード
//==================================================================================================================
HRESULT CIntervalFade::Load(void)
{
	CRenderer *pRenderer = CManager::GetRenderer();			// レンダラーの情報取得
	LPDIRECT3DDEVICE9 pDevice = pRenderer->GetDevice();		// デバイスを取得する

	// テクスチャの読み込み
	D3DXCreateTextureFromFile(pDevice,						// デバイスへのポインタ
		"data/TEXTURE/",									// ファイルの名前
		&m_pTexture);										// 読み込むメモリー

	return S_OK;											// 値を返す
}

//==================================================================================================================
// テクスチャ情報破棄
//==================================================================================================================
void CIntervalFade::Unload(void)
{
	// テクスチャがあるとき
	if (m_pTexture != NULL)
	{
		m_pTexture->Release();					// テクスチャの開放
		m_pTexture = NULL;						// NULLにする
	}
}

//==================================================================================================================
// フェードイン処理
//==================================================================================================================
void CIntervalFade::FadeIN(void)
{
	m_fade = FADE_IN;
}

//==================================================================================================================
// フェードアウト処理
//==================================================================================================================
void CIntervalFade::FadeOUT(void)
{
	m_fade = FADE_OUT;
	m_colorFade = D3DXCOLOR(0.0, 0.0, 0.0, 0.0);	// 色初期化
}
